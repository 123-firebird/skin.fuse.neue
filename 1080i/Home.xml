<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<window id="0">
    <defaultcontrol always="true">300</defaultcontrol>
    <onload>SetProperty(SkinHelper.WidgetContainer,301)</onload>
    <onload>Skin.SetString(SkinHelper.RandomFanartDelay,10)</onload>
    <onload>RunScript(script.skinshortcuts,type=buildxml&amp;mainmenuID=300&amp;group=mainmenu|x1101|x1102|x1103|x1104|x1105|x1106|x1107|x1108|x1109)</onload>
    <onload>SetProperty(LowerFurniture_BottomBar,0,Home)</onload>
    <onload condition="!Skin.HasSetting(SkinHelper.EnablePVRThumbs)">Skin.SetBool(SkinHelper.EnablePVRThumbs)</onload>
    <onload condition="!Skin.HasSetting(SkinHelper.EnableMusicArt)">Skin.SetBool(SkinHelper.EnableMusicArt)</onload>
    <onload>ClearProperty(ViewType,Home)</onload>
    <controls>
        <include>GlobalBackground</include>
        <control type="group">
            <visible>String.IsEmpty(Container(300).ListItem.Property(widgetType)) + [Control.HasFocus(300) | [!Control.HasFocus(300) + String.IsEmpty(Container(302).ListItem.Property(widgetType))]] + String.IsEqual(Skin.String(home.slideshowpath),$LOCALIZE[8]) + !Container(301).IsUpdating</visible>
            <animation type="Visible" reversible="false">
                <effect type="slide" start="0,160" end="0" time="400" tween="quadratic" easing="out" />
                <effect type="fade" start="0" end="100" time="200" />
            </animation>
            <animation type="Hidden" reversible="false">
                <effect type="slide" end="0,160" start="0" time="400" tween="quadratic" easing="out" />
                <effect type="fade" end="0" start="100" time="200" />
            </animation>
            <animation type="WindowOpen" reversible="false">
                <effect type="slide" start="0,700" end="0" time="400" tween="quadratic" easing="out" />
                <effect type="fade" start="0" end="100" time="200" />
            </animation>
            <animation type="WindowClose" reversible="false">
                <effect type="fade" end="0" start="100" time="200" delay="200"/>
            </animation>
            <include>Furniture_Weather</include>
        </control>
        <include>Furniture_TopBar</include>
        <include>Furniture_BottomBar</include>
        
        <control type="group">
            <visible>[[[!Control.HasFocus(300) + !String.IsEmpty(Container(302).ListItem.Property(widgetType)) + !String.IsEqual(Container(302).ListItem.Property(widgetName),Favourites)] + [String.IsEqual(Container(302).ListItem.Property(widgetType),movies) | String.IsEqual(Container(302).ListItem.Property(widgetType),sets) | String.IsEqual(Container(302).ListItem.Property(widgetType),seasons) | String.IsEqual(Container(302).ListItem.Property(widgetType),tvshows) | String.IsEqual(Container(302).ListItem.Property(widgetType),episodes) | String.IsEqual(Container(302).ListItem.Property(widgetType),videos) | String.IsEqual(Container(302).ListItem.Property(widgetType),musicvideos)]] | [[Control.HasFocus(300) | String.IsEmpty(Container(302).ListItem.Property(widgetType))] + !String.IsEqual(Container(300).ListItem.Property(widgetName),Favourites) + [String.IsEqual(Container(300).ListItem.Property(widgetType),movies) | String.IsEqual(Container(300).ListItem.Property(widgetType),sets) | String.IsEqual(Container(300).ListItem.Property(widgetType),seasons) | String.IsEqual(Container(300).ListItem.Property(widgetType),tvshows) | String.IsEqual(Container(300).ListItem.Property(widgetType),episodes) | String.IsEqual(Container(300).ListItem.Property(widgetType),videos) | String.IsEqual(Container(300).ListItem.Property(widgetType),musicvideos)]] | [[[String.IsEmpty(Container(300).ListItem.Property(widgetType)) + String.IsEmpty(Container(302).ListItem.Property(widgetType)) + !Control.HasFocus(300)] | [String.IsEmpty(Container(300).ListItem.Property(widgetType)) + Control.HasFocus(300)]] + [String.IsEqual(Skin.String(home.fallbackwidget.type),movies) | String.IsEqual(Skin.String(home.fallbackwidget.type),sets) | String.IsEqual(Skin.String(home.fallbackwidget.type),seasons) | String.IsEqual(Skin.String(home.fallbackwidget.type),tvshows) | String.IsEqual(Skin.String(home.fallbackwidget.type),episodes) | String.IsEqual(Skin.String(home.fallbackwidget.type),videos) | String.IsEqual(Skin.String(home.fallbackwidget.type),musicvideos) | String.IsEmpty(Skin.String(home.fallbackwidget.type))]]]</visible>
            <visible>Control.IsVisible(301)</visible>
            <include content="Furniture_BigPoster">
                <param name="container" value="Container(301)." />
                <param name="visible" value="!Container(301).IsUpdating + !Integer.IsEqual(Container(301).NumItems,0)" />
                <param name="variable" value="$VAR[HomePosterImage]" />
            </include>
        </control>
        <control type="group">
            <visible>![[[!Control.HasFocus(300) + !String.IsEmpty(Container(302).ListItem.Property(widgetType)) + !String.IsEqual(Container(302).ListItem.Property(widgetName),Favourites)] + [String.IsEqual(Container(302).ListItem.Property(widgetType),movies) | String.IsEqual(Container(302).ListItem.Property(widgetType),sets) | String.IsEqual(Container(302).ListItem.Property(widgetType),seasons) | String.IsEqual(Container(302).ListItem.Property(widgetType),tvshows) | String.IsEqual(Container(302).ListItem.Property(widgetType),episodes) | String.IsEqual(Container(302).ListItem.Property(widgetType),videos) | String.IsEqual(Container(302).ListItem.Property(widgetType),musicvideos)]] | [[Control.HasFocus(300) | String.IsEmpty(Container(302).ListItem.Property(widgetType))] + !String.IsEqual(Container(300).ListItem.Property(widgetName),Favourites) + [String.IsEqual(Container(300).ListItem.Property(widgetType),movies) | String.IsEqual(Container(300).ListItem.Property(widgetType),sets) | String.IsEqual(Container(300).ListItem.Property(widgetType),seasons) | String.IsEqual(Container(300).ListItem.Property(widgetType),tvshows) | String.IsEqual(Container(300).ListItem.Property(widgetType),episodes) | String.IsEqual(Container(300).ListItem.Property(widgetType),videos) | String.IsEqual(Container(300).ListItem.Property(widgetType),musicvideos)]] | [[[String.IsEmpty(Container(300).ListItem.Property(widgetType)) + String.IsEmpty(Container(302).ListItem.Property(widgetType)) + !Control.HasFocus(300)] | [String.IsEmpty(Container(300).ListItem.Property(widgetType)) + Control.HasFocus(300)]] + [String.IsEqual(Skin.String(home.fallbackwidget.type),movies) | String.IsEqual(Skin.String(home.fallbackwidget.type),sets) | String.IsEqual(Skin.String(home.fallbackwidget.type),seasons) | String.IsEqual(Skin.String(home.fallbackwidget.type),tvshows) | String.IsEqual(Skin.String(home.fallbackwidget.type),episodes) | String.IsEqual(Skin.String(home.fallbackwidget.type),videos) | String.IsEqual(Skin.String(home.fallbackwidget.type),musicvideos) | String.IsEmpty(Skin.String(home.fallbackwidget.type))]]]</visible>
            <visible>Control.IsVisible(301)</visible>
            <include content="Furniture_BigPoster">
                <param name="container" value="Container(301)." />
                <param name="visible" value="!Container(301).IsUpdating + !Integer.IsEqual(Container(301).NumItems,0)" />
                <param name="variable" value="$VAR[HomePosterImage]" />
                <param name="height" value="504" />
            </include>
        </control>

        
        <include>Furniture_Clock</include>
        
    </controls>
</window>
