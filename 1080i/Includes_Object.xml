<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="Object_PVRMenu">
        <control type="group">
            <height>242</height>
            <visible allowhiddenfocus="true">ControlGroup(6000).HasFocus()</visible>
            <include>Defs_Options_Menu</include>
            <control type="grouplist" id="6000">
                <include>Defs_Options_Grouplist</include>
                <control type="button" id="6003">
                    <description>Sort By</description>
                    <label>$INFO[Control.GetLabel(3)]</label>
                    <onclick>SendClick(3)</onclick>
                    <visible>Control.IsVisible(3)</visible>
                    <visible>Control.IsEnabled(3)</visible>
                    <include>Defs_Context_Button</include>
                </control>
                <control type="togglebutton" id="4">
                    <label>$LOCALIZE[580]: $LOCALIZE[584]</label>
                    <altlabel>$LOCALIZE[580]: $LOCALIZE[585]</altlabel>
                    <usealttexture>Container.SortDirection(Descending)</usealttexture>
                    <include>Defs_Context_Button</include>
                </control>
                <control type="button" id="28">
                    <description>Groups</description>
                    <include>Defs_Context_Button</include>
                </control>
            </control>
        </control>
    </include>

    <include name="Object_BigPoster">
        <param name="container" default="" />
        <param name="visible" default="!Container.IsUpdating" />
        <param name="variable" default="$VAR[Image_Poster]" />
        <param name="height" default="756" />
        <param name="discart" default="false" />
        <definition>

            <control type="group">
                <left>SidePad</left>
                <bottom>78</bottom>
                <width>504</width>
                <height>$PARAM[height]</height>
                <control type="image">
                    <width>484</width>
                    <height>484</height>
                    <top>-222</top>
                    <aspectratio>keep</aspectratio>
                    <centerleft>50%</centerleft>
                    <texture background="true">$INFO[ListItem.Art(discart)]</texture>
                    <animation effect="slide" start="0,222" end="0" time="300">VisibleChange</animation>
                    <visible>$PARAM[discart]</visible>
                    <visible>!String.IsEmpty(ListItem.Art(discart))</visible>
                    <visible>!Control.HasFocus(300) + !Control.HasFocus(302)</visible>
                </control>
                <animation type="WindowOpen" reversible="false" condition="[Window.Previous(MusicVisualisation.xml) | Window.Previous(VideoFullScreen.xml) | Window.Previous(Startup.xml)] + !Window.IsVisible(home)">
                    <effect type="slide" start="-534" end="0" time="400" delay="200" tween="quadratic" easing="out" />
                    <effect type="fade" start="0" end="100" time="200" delay="200" />
                </animation>
                <include>Animation_FadeInOut_Conditional</include>
                <visible>$PARAM[visible]</visible>
                <control type="image">
                    <centerbottom>0</centerbottom>
                    <width>100%</width>
                    <height>48</height>
                    <aspectratio>stretch</aspectratio>
                    <texture border="24,12,24,12">diffuse/shadowspot.png</texture>
                </control>
                <control type="group">
                    <visible>!Window.IsVisible(MyPics.xml)</visible>        
                    <control type="image">
                        <include>Defs_Shadow_Opaque</include>
                        <fadetime>0</fadetime>
                        <aspectratio aligny="center">scale</aspectratio>
                        <texture fallback="DefaultAddonImages.png">$PARAM[variable]</texture>
                        <visible>[!$PARAM[container]ListItem.IsParentFolder + !String.StartsWith($PARAM[container]ListItem.Icon,Default) + [!String.IsEmpty($PARAM[container]ListItem.Art(tvshow.poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(poster)) | Container.Content(albums) | Container.Content(songs) | Container.Content(actors) | Container.Content(addons) | Container.Content(artists) | Window.IsVisible(1101) | Window.IsVisible(1102) | Window.IsVisible(1103) | Window.IsVisible(1104) | Window.IsVisible(1105) | Window.IsVisible(1106) | Window.IsVisible(1107) | Window.IsVisible(1108) | Window.IsVisible(1109) | [Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRRecordings.xml)]]]</visible>
                    </control>
                    
                    <control type="group">
                        <visible>[[!$PARAM[container]ListItem.IsParentFolder + !String.StartsWith($PARAM[container]ListItem.Icon,Default)] + ![!String.IsEmpty($PARAM[container]ListItem.Art(tvshow.poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(poster)) | Container.Content(albums) | Container.Content(songs) | Container.Content(actors) | Container.Content(addons) | Container.Content(artists) | Window.IsVisible(1101) | Window.IsVisible(1102) | Window.IsVisible(1103) | Window.IsVisible(1104) | Window.IsVisible(1105) | Window.IsVisible(1106) | Window.IsVisible(1107) | Window.IsVisible(1108) | Window.IsVisible(1109) | [Window.IsVisible(MyPVRChannels.xml) | Window.IsVisible(MyPVRTimers.xml) | Window.IsVisible(MyPVRRecordings.xml)]]]</visible>
                        <control type="image">
                            <include>Defs_Shadow_Opaque</include>
                            <texture colordiffuse="PosterBack">common/white.png</texture>
                        </control>
                        <control type="image">
                            <fadetime>0</fadetime>
                            <aspectratio aligny="center">keep</aspectratio>
                            <texture fallback="DefaultAddonImages.png">$PARAM[variable]</texture>
                        </control>
                    </control>

                    <control type="group">
                        <visible>$PARAM[container]ListItem.IsParentFolder | String.StartsWith($PARAM[container]ListItem.Icon,Default)</visible>
                        <control type="image">
                            <fadetime>0</fadetime>
                            <include>Defs_Shadow_Opaque</include>
                            <aspectratio aligny="center">scale</aspectratio>
                            <texture colordiffuse="main_fg_100" fallback="DefaultAddonNone.png">$INFO[$PARAM[container]ListItem.Icon]</texture>
                            <visible>[!Container.Content(genres) + !Container.Content(studios)] | ListItem.IsParentFolder</visible>
                        </control>
                        <control type="image">
                            <fadetime>0</fadetime>
                            <include>Defs_Shadow_Opaque</include>
                            <aspectratio aligny="center">scale</aspectratio>
                            <texture colordiffuse="PosterBack" background="true">common/white.png</texture>
                            <visible>Container.Content(genres) + !ListItem.IsParentFolder</visible>
                        </control>
                        <control type="image">
                            <fadetime>0</fadetime>
                            <bordersize>80</bordersize>
                            <aspectratio aligny="center">keep</aspectratio>
                            <texture colordiffuse="main_fg_100" background="true" fallback="DefaultFolder.png">$INFO[$PARAM[container]ListItem.Label,resource://resource.images.moviegenreicons.transparent/,.png]</texture>
                            <visible>Container.Content(genres) + !ListItem.IsParentFolder</visible>
                        </control>
                        <control type="image">
                            <fadetime>0</fadetime>
                            <include>Defs_Shadow_Opaque</include>
                            <aspectratio aligny="center">scale</aspectratio>
                            <texture colordiffuse="PosterBack" background="true">common/white.png</texture>
                            <visible>Container.Content(studios) + !ListItem.IsParentFolder</visible>
                        </control>
                        <control type="image">
                            <fadetime>0</fadetime>
                            <bordersize>80</bordersize>
                            <aspectratio aligny="center">keep</aspectratio>
                            <texture colordiffuse="main_fg_100" background="true" fallback="DefaultFolder.png">$INFO[$PARAM[container]ListItem.Label,resource://resource.images.studios.white/,.png]</texture>
                            <visible>Container.Content(studios) + !ListItem.IsParentFolder</visible>
                        </control>
                    </control>
                </control>
                <control type="group">
                    <visible>Window.IsVisible(MyPics.xml)</visible>
                    <control type="group">
                        <control type="image">
                            <fadetime>0</fadetime>
                            <include>Defs_Shadow_Opaque</include>
                            <aspectratio>scale</aspectratio>
                            <texture colordiffuse="PosterBack">common/white.png</texture>
                        </control>
                        <control type="image">
                            <fadetime>0</fadetime>
                            <aspectratio aligny="center">keep</aspectratio>
                            <texture colordiffuse="main_fg_100" fallback="DefaultAddonImages.png">$INFO[ListItem.FileNameAndPath]</texture>
                        </control>
                    </control>
                </control>
            </control>
        </definition>
    </include>

    <include name="Object_Flags">
        <param name="container" default="" />
        <param name="directory" default="monochrome" />
        <definition>
            <control type="grouplist">
                <visible>!Skin.HasSetting(furniture.flags)</visible>
                <visible>!Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml)</visible>
                <visible>!Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)</visible>
                <visible>!String.IsEqual($PARAM[container]ListItem.Label,..)</visible>
                <visible>!$EXP[Expression_ShowWeatherWidget] | !Window.IsVisible(Home)</visible>
                <visible>!Window.IsVisible(DialogVideoInfo.xml) | String.IsEmpty(Window(Home).Property(FocusedList))</visible>
                <animation effect="fade" start="0" end="100" delay="30" time="1" reversible="false">Visible</animation>
                <right>30</right>
                <width>1400</width>
                <height>120</height>
                <orientation>horizontal</orientation>
                <align>right</align>
                <itemgap>8</itemgap>
                <centertop>50%</centertop>
                <usecontrolcoords>true</usecontrolcoords>
                <control type="image">
                    <width>64</width>
                    <centertop>50%</centertop>
                    <height>64</height>
                    <texture colordiffuse="panel_fg_100">flags/other/3D.png</texture>
                    <visible>$PARAM[container]ListItem.IsStereoscopic</visible>
                </control>
                <control type="image">
                    <width>64</width>
                    <centertop>50%</centertop>
                    <height>64</height>
                    <texture colordiffuse="panel_fg_100">flags/other/bluray.png</texture>
                    <visible>[String.StartsWith($PARAM[container]ListItem.FilenameAndPath,bluray) | String.StartsWith($PARAM[container]ListItem.FilenameAndPath,bdrip) | String.StartsWith($PARAM[container]ListItem.FilenameAndPath,bd25) | String.StartsWith($PARAM[container]ListItem.FilenameAndPath,bd50)]</visible>
                </control>
                <control type="image">
                    <width>95</width>
                    <centertop>50%</centertop>
                    <height>64</height>
                    <texture colordiffuse="panel_fg_100">flags/other/hddvd.png</texture>
                    <visible>String.StartsWith($PARAM[container]ListItem.FilenameAndPath,hddvd)</visible>
                </control>
                <control type="image">
                    <width>64</width>
                    <centertop>50%</centertop>
                    <height>64</height>
                    <texture colordiffuse="panel_fg_100">flags/other/dvd.png</texture>
                    <visible>String.StartsWith($PARAM[container]ListItem.FilenameAndPath,dvd) + !String.StartsWith($PARAM[container]ListItem.FilenameAndPath,hddvd)</visible>
                </control>
     
                <control type="image">
                    <width>88</width>
                    <height>48</height>
                    <centertop>50%</centertop>
                    <texture colordiffuse="panel_fg_100" fallback="flags/fallback.png">$INFO[$PARAM[container]ListItem.VideoResolution,flags/$PARAM[directory]/resolution/,.png]</texture>
                    <aspectratio align="right">keep</aspectratio>
                    <visible>!String.IsEmpty($PARAM[container]ListItem.VideoResolution) + !String.StartsWith($PARAM[container]ListItem.Path,videodb://movies/sets)</visible>
                </control>
                <control type="image">
                    <width>88</width>
                    <height>48</height>
                    <centertop>50%</centertop>
                    <texture colordiffuse="panel_fg_100" fallback="flags/fallback.png">$INFO[$PARAM[container]ListItem.VideoCodec,flags/$PARAM[directory]/source/,.png]</texture>
                    <aspectratio align="right">keep</aspectratio>
                    <visible>!String.IsEmpty($PARAM[container]ListItem.VideoCodec)</visible>
                </control>
                <control type="image">
                    <width>88</width>
                    <height>48</height>
                    <centertop>50%</centertop>
                    <texture colordiffuse="panel_fg_100" fallback="flags/fallback.png">$INFO[$PARAM[container]ListItem.VideoAspect,flags/$PARAM[directory]/aspectratio/,.png]</texture>
                    <aspectratio align="right">keep</aspectratio>
                    <visible>!String.IsEmpty($PARAM[container]ListItem.VideoAspect)</visible>
                </control>
                <control type="image">
                    <width>88</width>
                    <height>48</height>
                    <centertop>50%</centertop>
                    <texture colordiffuse="panel_fg_100" fallback="flags/fallback.png">$INFO[$PARAM[container]ListItem.AudioCodec,flags/$PARAM[directory]/audio/,.png]</texture>
                    <aspectratio align="right">keep</aspectratio>
                    <visible>!String.IsEmpty($PARAM[container]ListItem.AudioCodec)</visible>
                </control>
                <control type="image">
                    <width>88</width>
                    <height>48</height>
                    <centertop>50%</centertop>
                    <texture colordiffuse="panel_fg_100" fallback="flags/fallback.png">$INFO[$PARAM[container]ListItem.AudioChannels,flags/$PARAM[directory]/channels/,.png]</texture>
                    <aspectratio align="right">keep</aspectratio>
                    <visible>!String.IsEmpty($PARAM[container]ListItem.AudioChannels)</visible>
                </control>
            </control>
        </definition>
    </include>

    <include name="Object_Ratings">
        <param name="directory" default="monochrome" />
        <definition>
            <control type="grouplist">
                <top>896</top>
                <width>900</width>
                <right>30</right>
                <height>32</height>
                <orientation>horizontal</orientation>
                <align>right</align>
                <itemgap>12</itemgap>
                <usecontrolcoords>true</usecontrolcoords>
                
                <control type="image">
                    <top>0</top>
                    <width>32</width>
                    <height>32</height>
                    <texture colordiffuse="main_fg_100">flags/$PARAM[directory]/ratings/metacritic.png</texture>
                    <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating))</visible>
                </control>
                <control type="label">
                    <textcolor>main_fg_70</textcolor>
                    <top>2</top>
                    <width>auto</width>
                    <height>28</height>
                    <align>right</align>
                    <font>Tiny</font>
                    <label>$INFO[Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating), ,%   ]</label>
                    <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating))</visible>
                </control>
                <control type="image">
                    <top>0</top>
                    <width>32</width>
                    <height>32</height>
                    <texture colordiffuse="main_fg_100">flags/$PARAM[directory]/ratings/tmdb.png</texture>
                    <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.TMDB))</visible>
                </control>
                <control type="label">
                    <textcolor>main_fg_70</textcolor>
                    <top>2</top>
                    <width>auto</width>
                    <height>28</height>
                    <align>right</align>
                    <font>Tiny</font>
                    <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Rating.TMDB), ,   ]</label>
                    <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.TMDB))</visible>
                </control>
                <control type="image">
                    <top>0</top>
                    <width>32</width>
                    <height>32</height>
                    <texture colordiffuse="main_fg_100">flags/$PARAM[directory]/ratings/popcorn.png</texture>
                    <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter))</visible>
                </control>
                <control type="label">
                    <textcolor>main_fg_70</textcolor>
                    <top>2</top>
                    <width>auto</width>
                    <height>28</height>
                    <align>right</align>
                    <font>Tiny</font>
                    <label>$INFO[Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter), ,%   ]</label>
                    <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter))</visible>
                </control>
                <control type="image">
                    <width>32</width>
                    <height>32</height>
                    <texture colordiffuse="main_fg_100">flags/$PARAM[directory]/ratings/rtrotten.png</texture>
                    <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter))</visible>
                    <visible>!Integer.IsGreater(Window(home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),59)</visible>
                </control>
                <control type="image">
                    <width>32</width>
                    <height>32</height>
                    <texture colordiffuse="main_fg_100">flags/$PARAM[directory]/ratings/rtfresh.png</texture>
                    <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter))</visible>
                    <visible>Integer.IsGreater(Window(home).Property(SkinHelper.ListItem.RottenTomatoes.Meter),59)</visible>
                </control>
                <control type="label">
                    <textcolor>main_fg_70</textcolor>
                    <top>2</top>
                    <width>auto</width>
                    <height>28</height>
                    <align>right</align>
                    <font>Tiny</font>
                    <label>$INFO[Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter), ,%   ]</label>
                    <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Meter))</visible>
                </control>
                <control type="image">
                    <top>1</top>
                    <width>40</width>
                    <height>32</height>
                    <texture colordiffuse="main_fg_100">flags/$PARAM[directory]/ratings/imdbicon.png</texture>
                    <visible>!String.IsEmpty(ListItem.RatingAndVotes) | !String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Rating.IMDB))</visible>
                </control>
                <control type="label">
                    <textcolor>main_fg_70</textcolor>
                    <top>2</top>
                    <width>auto</width>
                    <height>28</height>
                    <align>right</align>
                    <font>Tiny</font>
                    <label>$INFO[Window(home).Property(SkinHelper.ListItem.Rating.IMDB), ,]$INFO[Window(home).Property(SkinHelper.ListItem.Votes.IMDB), (, $LOCALIZE[205])]</label>
                    <visible>!String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Rating.IMDB))</visible>
                </control>
                <control type="label">
                    <textcolor>main_fg_70</textcolor>
                    <top>2</top>
                    <width>auto</width>
                    <height>28</height>
                    <align>right</align>
                    <font>Tiny</font>
                    <label>$INFO[ListItem.RatingAndVotes, ,]</label>
                    <visible>String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Rating.IMDB)) + !String.IsEmpty(ListItem.RatingAndVotes)</visible>
                </control>
            </control>
        </definition>
    </include>

    <include name="Object_AlphabetStrip">
        <control type="group">
            <visible>[Window.IsVisible(Home) + ![String.IsEqual(Container(300).ListItem.Property(widget),weather) + [Control.HasFocus(300) | String.IsEmpty(Container(302).ListItem.Property(widget))] | [String.IsEqual(Container(302).ListItem.Property(widget),weather) + !Control.HasFocus(300)]]] | !Window.IsVisible(Home)</visible>
            <visible>!$EXP[Expression_ShowWeatherWidget] | !Window.IsVisible(Home)</visible>
            <control type="button" id="8000">
                <left>-100</left>
                <width>10</width>
                <height>1</height>
                <visible>Control.IsVisible(8001)</visible>
                <onfocus condition="!String.IsEqual(ListItem.SortLetter,A) + !String.IsEqual(ListItem.SortLetter,B) + !String.IsEqual(ListItem.SortLetter,C) + !String.IsEqual(ListItem.SortLetter,D) + !String.IsEqual(ListItem.SortLetter,E) + !String.IsEqual(ListItem.SortLetter,F) + !String.IsEqual(ListItem.SortLetter,G) + !String.IsEqual(ListItem.SortLetter,H) + !String.IsEqual(ListItem.SortLetter,I) + !String.IsEqual(ListItem.SortLetter,J) + !String.IsEqual(ListItem.SortLetter,K) + !String.IsEqual(ListItem.SortLetter,L) + !String.IsEqual(ListItem.SortLetter,M) + !String.IsEqual(ListItem.SortLetter,N) + !String.IsEqual(ListItem.SortLetter,O) + !String.IsEqual(ListItem.SortLetter,P) + !String.IsEqual(ListItem.SortLetter,Q) + !String.IsEqual(ListItem.SortLetter,R) + !String.IsEqual(ListItem.SortLetter,S) + !String.IsEqual(ListItem.SortLetter,T) + !String.IsEqual(ListItem.SortLetter,U) + !String.IsEqual(ListItem.SortLetter,V) + !String.IsEqual(ListItem.SortLetter,W) + !String.IsEqual(ListItem.SortLetter,X) + !String.IsEqual(ListItem.SortLetter,Y) + !String.IsEqual(ListItem.SortLetter,Z)">SetFocus(8001,0)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,A)">SetFocus(8001,1)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,B)">SetFocus(8001,2)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,C)">SetFocus(8001,3)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,D)">SetFocus(8001,4)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,E)">SetFocus(8001,5)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,F)">SetFocus(8001,6)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,G)">SetFocus(8001,7)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,H)">SetFocus(8001,8)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,I)">SetFocus(8001,9)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,J)">SetFocus(8001,10)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,K)">SetFocus(8001,11)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,L)">SetFocus(8001,12)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,M)">SetFocus(8001,13)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,N)">SetFocus(8001,14)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,O)">SetFocus(8001,15)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,P)">SetFocus(8001,16)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,Q)">SetFocus(8001,17)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,R)">SetFocus(8001,18)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,S)">SetFocus(8001,19)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,T)">SetFocus(8001,20)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,U)">SetFocus(8001,21)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,V)">SetFocus(8001,22)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,W)">SetFocus(8001,23)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,X)">SetFocus(8001,24)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,Y)">SetFocus(8001,25)</onfocus>
                <onfocus condition="String.IsEqual(ListItem.SortLetter,Z)">SetFocus(8001,26)</onfocus>
            </control>
            <control type="panel" id="8001">
                <orientation>horizontal</orientation>
                <left>606</left>
                <height>48</height>
                <bottom>75</bottom>
                <onup>50</onup>
                <ondown>9400</ondown>
                <width>1246</width>
                <visible>String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558])</visible>
                <visible>!Container.Content(seasons)</visible>
                <visible>!Skin.HasSetting(DisableAlphabetStrip)</visible>
                <itemlayout height="48" width="46">
                    <control type="label">
                        <aligny>center</aligny>
                        <align>center</align>
                        <height>48</height>
                        <label>$INFO[ListItem.Label]</label>
                        <textcolor>main_fg_12</textcolor>
                        <animation effect="fade" start="100" end="10" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
                    </control>
                    <control type="label">
                        <aligny>center</aligny>
                        <align>center</align>
                        <height>48</height>
                        <label>$INFO[ListItem.Label]</label>
                        <textcolor>main_fg_30</textcolor>
                        <visible>String.IsEqual(ListItem.Label,Container.ListItem.SortLetter) | [String.IsEqual(ListItem.Label,#) + !String.IsEqual(Container.ListItem.SortLetter,A) + !String.IsEqual(Container.ListItem.SortLetter,B) + !String.IsEqual(Container.ListItem.SortLetter,C) + !String.IsEqual(Container.ListItem.SortLetter,D) + !String.IsEqual(Container.ListItem.SortLetter,E) + !String.IsEqual(Container.ListItem.SortLetter,F) + !String.IsEqual(Container.ListItem.SortLetter,G) + !String.IsEqual(Container.ListItem.SortLetter,H) + !String.IsEqual(Container.ListItem.SortLetter,I) + !String.IsEqual(Container.ListItem.SortLetter,J) + !String.IsEqual(Container.ListItem.SortLetter,K) + !String.IsEqual(Container.ListItem.SortLetter,L) + !String.IsEqual(Container.ListItem.SortLetter,M) + !String.IsEqual(Container.ListItem.SortLetter,N) + !String.IsEqual(Container.ListItem.SortLetter,O) + !String.IsEqual(Container.ListItem.SortLetter,P) + !String.IsEqual(Container.ListItem.SortLetter,Q) + !String.IsEqual(Container.ListItem.SortLetter,R) + !String.IsEqual(Container.ListItem.SortLetter,S) + !String.IsEqual(Container.ListItem.SortLetter,T) + !String.IsEqual(Container.ListItem.SortLetter,U) + !String.IsEqual(Container.ListItem.SortLetter,V) + !String.IsEqual(Container.ListItem.SortLetter,W) + !String.IsEqual(Container.ListItem.SortLetter,X) + !String.IsEqual(Container.ListItem.SortLetter,Y) + !String.IsEqual(Container.ListItem.SortLetter,Z)]</visible>
                    </control>
                </itemlayout>
                <focusedlayout height="48" width="46">
                    <control type="image">
                        <height>4</height>
                        <bottom>0</bottom>
                        <texture colordiffuse="$VAR[ColorHighlight]">common/white.png</texture>
                    </control>
                    <control type="label">
                        <aligny>center</aligny>
                        <align>center</align>
                        <height>48</height>
                        <label>$INFO[ListItem.Label]</label>
                        <textcolor>Selected</textcolor>
                        <animation effect="fade" start="100" end="10" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
                    </control>
                </focusedlayout>
                <content>plugin://script.skin.helper.service/?action=alphabet&amp;reload=$INFO[Container.NumItems]</content>
            </control>
            <control type="image">
                <height>16</height>
                <width>16</width>
                <aspectratio aligny="center">keep</aspectratio>
                <bottom>90</bottom>
                <right>30</right>
                <texture colordiffuse="main_fg_30">common/arrow-small-right.png</texture>
                <visible>Container.HasNext | Container(301).HasNext</visible>
                <visible>!Control.IsVisible(54)</visible>
                <visible>[Control.IsVisible(8000) + !Container(8000).IsUpdating] | Control.IsVisible(60)</visible>
            </control>
            <control type="group">
                <visible>!Control.IsVisible(8000)</visible>
                <visible>!Control.IsVisible(54)</visible>
                <include>Object_Scrollbar</include>
            </control>
            <control type="group">
                <visible>Control.IsVisible(54)</visible>
                <include>Object_Scrollbar_Vert</include>
            </control>
        </control>
    </include>

    <include name="Object_Scrollbar">
        <control type="button" id="61">
            <left>614</left>
            <width>1226</width>
            <bottom>94</bottom>
            <height>8</height>
            <visible allowhiddenfocus="true">false</visible>
            <onleft>60</onleft>
            <onright>60</onright>
            <ondown>60</ondown>
            <onup>60</onup>
            <onfocus>SetFocus(60)</onfocus>
            <include>View_Movement_OnFocus</include>
        </control>
        <control type="scrollbar" id="60">
            <onback>50</onback>
            <left>614</left>
            <width>1226</width>
            <bottom>94</bottom>
            <orientation>horizontal</orientation>
            <height>8</height>
            <onup condition="Window.IsVisible(home)">301</onup>
            <onup condition="!Window.IsVisible(home) + !Window.IsVisible(script-script.extendedinfo-VideoList.xml)">50</onup>
            <onup condition="Window.IsVisible(script-script.extendedinfo-VideoList.xml)">500</onup>
            <ondown>9400</ondown>
            <texturesliderbackground colordiffuse="main_fg_12">osd/progress-end.png</texturesliderbackground>
            <texturesliderbar colordiffuse="main_fg_30">osd/progress-end.png</texturesliderbar>
            <texturesliderbarfocus colordiffuse="$VAR[ColorHighlight]">osd/progress-end.png</texturesliderbarfocus>
            <animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
            <visible>!Window.IsVisible(home) | [Window.IsVisible(home) + !Container(301).IsUpdating]</visible>
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>
            <visible>!String.IsEqual(Window(Home).Property(ViewType),List)</visible>
        </control>
    </include>

    <include name="Object_Scrollbar_Vert">
        <control type="button" id="61">
            <right>0</right>
            <width>8</width>
            <top>18</top>
            <bottom>80</bottom>
            <visible allowhiddenfocus="true">false</visible>
            <onleft>60</onleft>
            <onright>60</onright>
            <ondown>60</ondown>
            <onup>60</onup>
            <onfocus>SetFocus(60)</onfocus>
            <include>View_Movement_OnFocus</include>
        </control>
        <control type="scrollbar" id="60">
            <onback>50</onback>
            <right>0</right>
            <width>8</width>
            <top>18</top>
            <bottom>80</bottom>
            <orientation>vertical</orientation>
            <onright condition="$EXP[Expression_ReplaceWindowHome]">ReplaceWindow(Home)</onright>
            <onright condition="!$EXP[Expression_ReplaceWindowHome]">300</onright>
            <onleft condition="Window.IsVisible(home)">301</onleft>
            <onleft condition="!Window.IsVisible(home) + !Window.IsVisible(script-script.extendedinfo-VideoList.xml)">50</onleft>
            <onleft condition="Window.IsVisible(script-script.extendedinfo-VideoList.xml)">500</onleft>
            <texturesliderbackground colordiffuse="main_fg_12">common/white.png</texturesliderbackground>
            <texturesliderbar colordiffuse="main_fg_30">common/white.png</texturesliderbar>
            <texturesliderbarfocus colordiffuse="$VAR[ColorHighlight]">common/white.png</texturesliderbarfocus>
            <animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
            <visible>!Window.IsVisible(home) | [Window.IsVisible(home) + !Container(301).IsUpdating]</visible>
            <include>Animation_FadeIn</include>
            <include>Animation_FadeOut</include>
        </control>
    </include>
</includes>
