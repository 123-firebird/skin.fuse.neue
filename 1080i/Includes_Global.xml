<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="Global_Overlay">
        <control type="image">
            <include>Animation_FadeIn</include>
            <include condition="!Window.IsVisible(DialogButtonMenu.xml)">Animation_FadeOut</include>
            <include>Dimensions_Fullscreen</include>
            <texture border="2">common/black-back.png</texture>
        </control>
    </include>

    <include name="Global_Videowindow">
        <control type="image" description="Background">
            <include>Dimensions_Fullscreen</include>
            <texture colordiffuse="Background">common/white.png</texture>
        </control>
        <control type="image" description="Background">
            <include>Dimensions_Fullscreen</include>
            <texture colordiffuse="ff000000">common/white.png</texture>
            <visible>Player.HasVideo + Skin.HasSetting(global.showvideo)</visible>
        </control>
        <control type="videowindow">
            <visible>Skin.HasSetting(global.showvideo)</visible>
            <include>Dimensions_Fullscreen</include>
        </control>
    </include>
    
    <include name="Global_Visualisation">
        <control type="group">
            <visible>Player.HasAudio + Skin.HasSetting(global.showvisualisation)</visible>
            <control type="visualisation">
                <visible>Skin.HasSetting(ArtistSlideShow.Disabled) | !System.HasAddon(script.artistslideshow)</visible>
                <description>visualisation</description>
                <include>Dimensions_Fullscreen</include>
            </control>
            <control type="multiimage">
                <aspectratio>scale</aspectratio>
                <include>Dimensions_Fullscreen</include>
                <timeperimage>10000</timeperimage>
                <randomize>true</randomize>
                <fadetime>600</fadetime>
                <loop>true</loop>
                <imagepath background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
                <visible>System.HasAddon(script.artistslideshow) + !Skin.HasSetting(ArtistSlideShow.Disabled)</visible>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(ArtistSlideshow.Animate)">Conditional</animation>
            </control>
        </control>
    </include>
    
    <include name="Global_Background">
        <include>Global_Videowindow</include>
        <include>Global_Visualisation</include>
        <control type="group">
            <animation effect="slide" start="0" end="0,-48" time="600" tween="sine" easing="inout" reversible="true" condition="$EXP[Expression_ShowTopbar] + !$EXP[Expression_LowerBottomBar]">Conditional</animation>
            <include>Animation_FadeInOut_Conditional</include>
            
            <control type="multiimage" description="Fanart">
                <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
                <visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
                <include>Dimensions_Fullscreen</include>
                <fadetime>600</fadetime>
                <timeperimage>12000</timeperimage>
                <randomize>true</randomize>
                <aspectratio>scale</aspectratio>
                <imagepath background="true">$VAR[Global_Background_Image]</imagepath>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
            </control>
            <control type="image" description="Fanart Fallback always">
                <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
                <include>Dimensions_Fullscreen</include>
                <visible>!Window.IsVisible(home) + Skin.HasSetting(global.hidefanart) + !String.IsEmpty(Skin.String(fanart.fallback))</visible>
                <aspectratio>scale</aspectratio>
                <texture background="true">$INFO[Skin.String(fanart.fallback)]</texture>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
            </control>
        </control>
    </include>

    <include name="Global_Background_Settings">
        <include>Global_Videowindow</include>
        <include>Global_Visualisation</include>
        <control type="group">
            <animation effect="fade" end="0" start="100" time="400" condition="![Window.Next(SettingsCategory.xml) | Window.Next(Settings.xml) | Window.Next(AddonBrowser.xml) | Window.Next(SkinSettings.xml) | Window.Next(MyWeather.xml) | Window.Next(SettingsSystemInfo.xml) | Window.Next(SettingsProfile.xml) | Window.Next(SettingsScreenCalibration.xml) | Window.Next(FileManager.xml)]">WindowClose</animation>
            <animation effect="fade" start="0" end="100" time="400" condition="![Window.Previous(SettingsCategory.xml) | Window.Previous(Settings.xml) | Window.Previous(AddonBrowser.xml) | Window.Previous(SkinSettings.xml) | Window.Previous(MyWeather.xml) | Window.Previous(SettingsSystemInfo.xml) | Window.Previous(SettingsProfile.xml) | Window.Previous(SettingsScreenCalibration.xml) | Window.Previous(FileManager.xml)]">WindowOpen</animation>
            <control type="multiimage" description="Fanart">
                <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
                <visible>!Skin.HasSetting(global.hidefanart) | Window.IsVisible(home)</visible>
                <include>Dimensions_Fullscreen</include>
                <fadetime>0</fadetime>
                <timeperimage>12000</timeperimage>
                <randomize>true</randomize>
                <aspectratio>scale</aspectratio>
                <imagepath background="true">$VAR[Global_Background_Image]</imagepath>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
            </control>
            <control type="image" description="Fanart Fallback always">
                <visible>!Player.HasMedia | [!Skin.HasSetting(global.showvideo) + Player.HasVideo] | [!Skin.HasSetting(global.showvisualisation) + Player.HasAudio]</visible>
                <include>Dimensions_Fullscreen</include>
                <visible>!Window.IsVisible(home) + Skin.HasSetting(global.hidefanart) + !String.IsEmpty(Skin.String(fanart.fallback))</visible>
                <aspectratio>scale</aspectratio>
                <texture background="true">$INFO[Skin.String(fanart.fallback)]</texture>
                <animation effect="zoom" start="110" end="130" center="auto" time="10000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
                <animation effect="slide" start="-30,-30" end="30,30" time="6000" tween="sine" easing="inout" pulse="true" condition="Skin.HasSetting(AnimatedFanart)">Conditional</animation>
            </control>
        </control>
    </include>

    <variable name="Global_Background_Image_NoFanart">
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Container(300).ListItem.Property(Background))">$INFO[Container(300).ListItem.Property(Background)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Skin.String(home.slideshowpath)) + !String.IsEqual(Skin.String(home.slideshowpath),$LOCALIZE[8]) + [String.IsEmpty(Container(300).ListItem.Property(widget)) | Container(301).IsUpdating |  Skin.HasSetting(home.dontshowfanart)]">$INFO[Skin.String(home.slideshowpath)]</value>
        <value condition="!String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
        <value>special://skin/extras/backgrounds/default.jpg</value>
    </variable>

    <variable name="Global_Background_Image">
        <value condition="Skin.HasSetting(NoFanart)">$VAR[Global_Background_Image_NoFanart]</value>
        <!-- Extended Info -->
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),150) | Control.HasFocus(150)] + !String.IsEmpty(Container(150).ListItem.Art(fanart))">$INFO[Container(150).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),150) | Control.HasFocus(150)] + !String.IsEmpty(Container(150).ListItem.Art(fanart))">$INFO[Container(150).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),250) | Control.HasFocus(250)] + !String.IsEmpty(Container(250).ListItem.Art(fanart))">$INFO[Container(250).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),550) | Control.HasFocus(550)] + !String.IsEmpty(Container(550).ListItem.Art(fanart))">$INFO[Container(550).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) + !String.IsEmpty(Window.Property(fanart_original))">$INFO[Window.Property(fanart_original)]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml) + !String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)">special://skin/extras/backgrounds/default.jpg</value>
        <value condition="Window.IsVisible(script-script.extendedinfo-VideoList.xml) + !String.IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>

        <!-- DialogVideoInfo Director -->
        <value condition="Window.IsVisible(DialogVideoInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),9502) | Control.HasFocus(9502)] + !String.IsEmpty(Window(Home).Property(ListFanartContent))">$INFO[Window(Home).Property(ListFanartContent)]</value>
        <value condition="Window.IsVisible(DialogVideoInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),9502) | Control.HasFocus(9502)] + String.IsEmpty(Window(Home).Property(ListFanartContent)) + !String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
        <value condition="Window.IsVisible(DialogVideoInfo.xml) + [String.IsEqual(Window(Home).Property(FocusedList),9502) | Control.HasFocus(9502)] + String.IsEmpty(Window(Home).Property(ListFanartContent))">special://skin/extras/backgrounds/default.jpg</value>

        <!-- Misc -->
        <value condition="Window.IsVisible(weather) + !String.IsEmpty(Skin.String(weather.fanart.path))">$INFO[Skin.String(weather.fanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]/</value>        

        <!-- Home Window -->
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Skin.String(weather.fanart.path)) + [[String.IsEqual(Container(300).ListItem.Property(widget),weather) + [Control.HasFocus(300) | String.IsEmpty(Container(302).ListItem.Property(widget))]] | [String.IsEqual(Container(302).ListItem.Property(widget),weather) + !Control.HasFocus(300)] | [String.IsEmpty(Container(300).ListItem.Property(widget)) + String.IsEmpty(Container(302).ListItem.Property(widget)) + String.IsEqual(Skin.String(home.fallbackwidget.name),weather)]]">$INFO[Skin.String(weather.fanart.path)]$INFO[Window(Weather).Property(Current.FanartCode)]/</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Container(301).ListItem.Art(fanart)) + [!Skin.HasSetting(home.dontshowfanart) | Control.HasFocus(301)] + Control.IsVisible(301)">$INFO[Container(301).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Container(301).ListItem.Property(fanart)) + [!Skin.HasSetting(home.dontshowfanart) | Control.HasFocus(301)] + Control.IsVisible(301)">$INFO[Container(301).ListItem.Property(fanart)]</value>
        <value condition="Window.IsVisible(home) + String.IsEqual(Container(300).ListItem.Property(background),playlistBackground)">$INFO[Container(9988).ListItem.Art(fanart)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Container(300).ListItem.Property(Background))">$INFO[Container(300).ListItem.Property(Background)]</value>
        <value condition="Window.IsVisible(home) + !String.IsEmpty(Skin.String(home.slideshowpath)) + !String.IsEqual(Skin.String(home.slideshowpath),$LOCALIZE[8]) + [String.IsEmpty(Container(300).ListItem.Property(widget)) | Container(301).IsUpdating |  Skin.HasSetting(home.dontshowfanart)]">$INFO[Skin.String(home.slideshowpath)]</value>

        <value condition="Window.IsVisible(home) + !Container(301).IsUpdating + !String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>
        <value condition="Window.IsVisible(home) + !Container(301).IsUpdating">special://skin/extras/backgrounds/default.jpg</value>

        <!-- Fanart -->
        <value condition="Skin.HasSetting(SkinHelper.EnableAnimatedPosters) + !String.IsEmpty(ListItem.Art(animatedfanart))">$INFO[ListItem.Art(animatedfanart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt)) + Skin.HasSetting(SkinHelper.EnableExtraFanart)">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.ExtraFanArt)]</value>
        <value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Property(Fanart_Image)]</value>
        <value condition="!String.IsEmpty(ListItem.Property(Fanart))">$INFO[ListItem.Property(Fanart)]</value>
        <value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.Fanart))">$INFO[Window(Home).Property(SkinHelper.ListItem.Art.Fanart)]</value>

        <!-- Hubs -->
        <value condition="Window.IsVisible(1101) + !String.IsEmpty(Window(Home).Property(SkinHelper.AllMoviesBackground.Wall))">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground.Wall)]</value>
        <value condition="Window.IsVisible(1102) + !String.IsEmpty(Window(Home).Property(SkinHelper.AllTvShowsBackground.Wall))">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground.Wall)]</value>
        <value condition="Window.IsVisible(1103) + !String.IsEmpty(Window(Home).Property(SkinHelper.AllMusicBackground.Wall))">$INFO[Window(Home).Property(SkinHelper.AllMusicBackground.Wall)]</value>
        <value condition="[Window.IsVisible(1101) | Window.IsVisible(1102) | Window.IsVisible(1103) | Window.IsVisible(1104) | Window.IsVisible(1105) | Window.IsVisible(1106) | Window.IsVisible(1107) | Window.IsVisible(1108) | Window.IsVisible(1109) | Window.IsVisible(1110) | Window.IsVisible(1111)] + !String.IsEmpty(Window(Home).Property(SkinHelper.AllMoviesBackground.Wall))">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground.Wall)]</value>

        <!-- Fallback -->
        <value condition="!String.IsEmpty(Skin.String(fanart.fallback))">$INFO[Skin.String(fanart.fallback)]</value>

        <!-- Default -->
        <value>special://skin/extras/backgrounds/default.jpg</value>
    </variable>
</includes>
